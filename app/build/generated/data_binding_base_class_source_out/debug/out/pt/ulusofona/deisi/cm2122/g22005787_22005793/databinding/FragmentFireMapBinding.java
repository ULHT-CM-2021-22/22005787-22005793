// Generated by view binder compiler. Do not edit!
package pt.ulusofona.deisi.cm2122.g22005787_22005793.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.gms.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pt.ulusofona.deisi.cm2122.g22005787_22005793.R;

public final class FragmentFireMapBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView imageview4;

  @NonNull
  public final MapView map;

  @NonNull
  public final TextView riscoRegiao;

  @NonNull
  public final RelativeLayout riskLayout;

  private FragmentFireMapBinding(@NonNull FrameLayout rootView, @NonNull ImageView imageview4,
      @NonNull MapView map, @NonNull TextView riscoRegiao, @NonNull RelativeLayout riskLayout) {
    this.rootView = rootView;
    this.imageview4 = imageview4;
    this.map = map;
    this.riscoRegiao = riscoRegiao;
    this.riskLayout = riskLayout;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFireMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFireMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_fire_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFireMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageview4;
      ImageView imageview4 = ViewBindings.findChildViewById(rootView, id);
      if (imageview4 == null) {
        break missingId;
      }

      id = R.id.map;
      MapView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.risco_regiao;
      TextView riscoRegiao = ViewBindings.findChildViewById(rootView, id);
      if (riscoRegiao == null) {
        break missingId;
      }

      id = R.id.risk_layout;
      RelativeLayout riskLayout = ViewBindings.findChildViewById(rootView, id);
      if (riskLayout == null) {
        break missingId;
      }

      return new FragmentFireMapBinding((FrameLayout) rootView, imageview4, map, riscoRegiao,
          riskLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
